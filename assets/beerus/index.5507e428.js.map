{"mappings":"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","sources":["<anon>","../../../../../.nvm/versions/node/v21.1.0/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","../../../../../.nvm/versions/node/v21.1.0/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/runtime-284bdde1b260cd00.js","app.js","../../../../../.nvm/versions/node/v21.1.0/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/runtime-a1be57ea1bdf8d8b.js","../../../../../.nvm/versions/node/v21.1.0/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"XNWnP\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $0b3c3ffa88f00ec8$export$6503ec6e8aabbaf, (v) => $0b3c3ffa88f00ec8$export$6503ec6e8aabbaf = v);\nvar $0b3c3ffa88f00ec8$export$6503ec6e8aabbaf;\nvar $0b3c3ffa88f00ec8$export$f7ad0328861e2f03;\n\"use strict\";\nvar $0b3c3ffa88f00ec8$var$mapping = new Map();\nfunction $0b3c3ffa88f00ec8$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$0b3c3ffa88f00ec8$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $0b3c3ffa88f00ec8$var$resolve(id) {\n    var resolved = $0b3c3ffa88f00ec8$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$0b3c3ffa88f00ec8$export$6503ec6e8aabbaf = $0b3c3ffa88f00ec8$var$register;\n$0b3c3ffa88f00ec8$export$f7ad0328861e2f03 = $0b3c3ffa88f00ec8$var$resolve;\n\n});\n\nvar $9b15337c701ec9c9$exports = {};\n\n(parcelRequire(\"XNWnP\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"jRPZQ\",\"index.5507e428.js\",\"hx8j8\",\"wrk.2b6d011e.js\"]'));\n\nvar $f72e780566692a5a$exports = {};\nvar $93ab40856e8270c2$exports = {};\n\"use strict\";\n$93ab40856e8270c2$exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n\nlet $f72e780566692a5a$var$url = new URL(\"wrk.2b6d011e.js\", import.meta.url);\n$f72e780566692a5a$exports = $93ab40856e8270c2$exports($f72e780566692a5a$var$url.toString(), $f72e780566692a5a$var$url.origin, true);\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const chatLog = document.getElementById(\"chat-log\");\n    const input = document.getElementById(\"json-input\");\n    const sendBtn = document.getElementById(\"send-btn\");\n    const templateBtns = document.querySelectorAll(\".template-btn\");\n    const alchemyKeyInput = document.getElementById(\"alchemy-key\");\n    const initBtn = document.getElementById(\"init-btn\");\n    const statusSpan = document.getElementById(\"status\");\n    let messageId = 1;\n    const statusIcons = {\n        unknown: \"\\u2753\",\n        pending: \"\\u23F3\",\n        ready: \"\\u2705\",\n        error: \"\\u274C\"\n    };\n    var ready;\n    const worker = new Worker($f72e780566692a5a$exports);\n    worker.onmessage = (event)=>{\n        if (!ready) {\n            if (event.data === \"OK\") {\n                ready = true;\n                statusSpan.innerText = statusIcons.ready;\n            } else {\n                console.error(event.data);\n                statusSpan.innerText = statusIcons.error;\n            }\n            return;\n        }\n        try {\n            let json = JSON.parse(event.data);\n            let responseContent = document.getElementById(json.id);\n            delete json.id;\n            let response = formatJSON(JSON.stringify(json));\n            responseContent.innerHTML = response;\n            if (json.hasOwnProperty(\"error\")) {\n                console.error(json[\"error\"]);\n                responseContent.parentElement.setAttribute(\"style\", \"border-left-color:#FF0000\");\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    worker.onerror = (error)=>{\n        console.error(error);\n    };\n    function sendMessage(userMessage) {\n        if (!ready || userMessage.trim() === \"\") return;\n        addMessagePair(userMessage, messageId);\n        let message = appendId(userMessage, messageId);\n        worker.postMessage(message);\n        messageId++;\n        input.value = \"\";\n    }\n    function appendId(message, id) {\n        let object = JSON.parse(message);\n        object.id = id;\n        return JSON.stringify(object);\n    }\n    function addMessagePair(userMessage, id) {\n        const messagePairDiv = document.createElement(\"div\");\n        messagePairDiv.classList.add(\"message-pair\");\n        const requestMessage = createMessageDiv(formatJSON(userMessage), id, \"request\");\n        const responseMessage = createMessageDiv(statusIcons.pending, id, \"response\");\n        messagePairDiv.appendChild(requestMessage);\n        messagePairDiv.appendChild(responseMessage);\n        chatLog.prepend(messagePairDiv);\n    }\n    function createMessageDiv(messageContent, id, type) {\n        const messageDiv = document.createElement(\"div\");\n        messageDiv.classList.add(\"message\", type);\n        const content = document.createElement(\"div\");\n        if (type === \"response\") content.id = id;\n        content.classList.add(\"content\");\n        content.innerHTML = messageContent;\n        const messageIdDiv = document.createElement(\"div\");\n        messageIdDiv.classList.add(\"id\");\n        messageIdDiv.textContent = `#${id}`;\n        messageDiv.appendChild(content);\n        messageDiv.appendChild(messageIdDiv);\n        return messageDiv;\n    }\n    sendBtn.addEventListener(\"click\", ()=>sendMessage(input.value));\n    input.addEventListener(\"keypress\", (e)=>{\n        if (e.key === \"Enter\" && e.shiftKey) {\n            sendMessage(input.value);\n            e.preventDefault(); // Prevents default Enter behavior (add new line)\n        }\n    });\n    templateBtns.forEach((btn)=>{\n        btn.addEventListener(\"click\", ()=>{\n            input.value = JSON.stringify(JSON.parse(btn.dataset.template), null, 2);\n        });\n    });\n    function formatJSON(jsonString) {\n        try {\n            const obj = JSON.parse(jsonString);\n            return syntaxHighlight(JSON.stringify(obj, null, 2));\n        } catch (e) {\n            return jsonString; // Return input string if not a valid JSON\n        }\n    }\n    function syntaxHighlight(json) {\n        json = json.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        return json.replace(/(\"(\\\\u[\\da-fA-F]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|\\d+)/g, function(match) {\n            let cls = \"json-value\";\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) cls = \"json-key\";\n                else cls = \"json-string\";\n            } else if (/true|false/.test(match)) cls = \"json-boolean\";\n            return `<span class=\"${cls}\">${match}</span>`;\n        });\n    }\n    input.addEventListener(\"input\", function() {\n        try {\n            const formattedJSON = JSON.stringify(JSON.parse(input.value), null, 2);\n            input.value = formattedJSON;\n        } catch (e) {\n        // ignore if the input is not a valid JSON yet\n        }\n    });\n    initBtn.addEventListener(\"click\", ()=>{\n        if (ready) return;\n        const alchemyKey = alchemyKeyInput.value;\n        if (!alchemyKey) {\n            console.log(\"Alchemy key is empty\");\n            return;\n        }\n        const config = JSON.stringify({\n            network: \"mainnet\",\n            ethereum_url: `http://127.0.0.1:3000/eth-mainnet.g.alchemy.com/v2/${alchemyKey}`,\n            starknet_url: `http://127.0.0.1:3000/starknet-mainnet.g.alchemy.com/starknet/version/rpc/v0_7/${alchemyKey}`\n        });\n        worker.postMessage(config);\n        statusSpan.innerText = statusIcons.pending;\n    });\n});\n\n\n//# sourceMappingURL=index.5507e428.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"jRPZQ\\\",\\\"index.5507e428.js\\\",\\\"hx8j8\\\",\\\"wrk.2b6d011e.js\\\"]\"));","document.addEventListener(\"DOMContentLoaded\", () => {\n    const chatLog = document.getElementById(\"chat-log\");\n    const input = document.getElementById(\"json-input\");\n    const sendBtn = document.getElementById(\"send-btn\");\n    const templateBtns = document.querySelectorAll('.template-btn');\n    const alchemyKeyInput = document.getElementById(\"alchemy-key\");\n    const initBtn = document.getElementById(\"init-btn\");\n    const statusSpan = document.getElementById(\"status\");\n    let messageId = 1;\n\n    const statusIcons = {\n        unknown: '❓',\n        pending: '⏳',\n        ready: '✅',\n        error: '❌'\n    };\n\n    var ready;\n    const worker = new Worker(new URL('./wrk.js', import.meta.url), { type: 'module' });\n    worker.onmessage = event => {\n        if (!ready) {\n            if (event.data === 'OK') {\n                ready = true;\n                statusSpan.innerText = statusIcons.ready;\n            } else {\n                console.error(event.data);\n                statusSpan.innerText = statusIcons.error;\n            }\n            return;\n        }\n\n        try {\n            let json = JSON.parse(event.data);\n            let responseContent = document.getElementById(json.id);\n            delete json.id;\n            let response = formatJSON(JSON.stringify(json));\n            responseContent.innerHTML = response;\n\n            if (json.hasOwnProperty('error')) {\n                console.error(json['error']);\n                responseContent.parentElement.setAttribute(\"style\", \"border-left-color:#FF0000\");\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    worker.onerror = error => {\n        console.error(error);\n    }\n\n    function sendMessage(userMessage) {\n        if (!ready || userMessage.trim() === \"\") return;\n\n        addMessagePair(userMessage, messageId);\n\n        let message = appendId(userMessage, messageId);\n        worker.postMessage(message);\n\n        messageId++;\n        input.value = '';\n    }\n\n    function appendId(message, id) {\n        let object = JSON.parse(message);\n        object.id = id;\n        return JSON.stringify(object);\n    }\n\n    function addMessagePair(userMessage, id) {\n        const messagePairDiv = document.createElement(\"div\");\n        messagePairDiv.classList.add(\"message-pair\");\n\n        const requestMessage = createMessageDiv(formatJSON(userMessage), id, \"request\");\n        const responseMessage = createMessageDiv(statusIcons.pending, id, \"response\");\n        messagePairDiv.appendChild(requestMessage);\n        messagePairDiv.appendChild(responseMessage);\n        chatLog.prepend(messagePairDiv);\n    }\n\n    function createMessageDiv(messageContent, id, type) {\n        const messageDiv = document.createElement(\"div\");\n        messageDiv.classList.add(\"message\", type);\n\n        const content = document.createElement(\"div\");\n        if (type === \"response\") {\n            content.id = id;\n        }\n        content.classList.add(\"content\");\n        content.innerHTML = messageContent;\n\n        const messageIdDiv = document.createElement(\"div\");\n        messageIdDiv.classList.add(\"id\");\n        messageIdDiv.textContent = `#${id}`;\n\n        messageDiv.appendChild(content);\n        messageDiv.appendChild(messageIdDiv);\n\n        return messageDiv;\n    }\n\n    sendBtn.addEventListener(\"click\", () => sendMessage(input.value));\n    input.addEventListener(\"keypress\", (e) => {\n        if (e.key === \"Enter\" && e.shiftKey) {\n            sendMessage(input.value);\n            e.preventDefault(); // Prevents default Enter behavior (add new line)\n        }\n    });\n\n    templateBtns.forEach(btn => {\n        btn.addEventListener('click', () => {\n            input.value = JSON.stringify(JSON.parse(btn.dataset.template), null, 2);\n        });\n    });\n\n    function formatJSON(jsonString) {\n        try {\n            const obj = JSON.parse(jsonString);\n            return syntaxHighlight(JSON.stringify(obj, null, 2));\n        } catch (e) {\n            return jsonString; // Return input string if not a valid JSON\n        }\n    }\n\n    function syntaxHighlight(json) {\n        json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        return json.replace(/(\"(\\\\u[\\da-fA-F]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|\\d+)/g, function (match) {\n            let cls = 'json-value';\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = 'json-key';\n                } else {\n                    cls = 'json-string';\n                }\n            } else if (/true|false/.test(match)) {\n                cls = 'json-boolean';\n            }\n            return `<span class=\"${cls}\">${match}</span>`;\n        });\n    }\n\n    input.addEventListener('input', function () {\n        try {\n            const formattedJSON = JSON.stringify(JSON.parse(input.value), null, 2);\n            input.value = formattedJSON;\n        } catch (e) {\n            // ignore if the input is not a valid JSON yet\n        }\n    });\n\n    initBtn.addEventListener(\"click\", () => {\n        if (ready) {\n            return;\n        }\n        const alchemyKey = alchemyKeyInput.value;\n        if (!alchemyKey) {\n            console.log(\"Alchemy key is empty\");\n            return;\n        }\n        const config = JSON.stringify({\n            network: \"mainnet\",\n            ethereum_url: `http://127.0.0.1:3000/eth-mainnet.g.alchemy.com/v2/${alchemyKey}`,\n            starknet_url: `http://127.0.0.1:3000/starknet-mainnet.g.alchemy.com/starknet/version/rpc/v0_7/${alchemyKey}`\n        });\n        worker.postMessage(config);\n        statusSpan.innerText = statusIcons.pending;\n    });\n});\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(\"wrk.2b6d011e.js\");\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$0b3c3ffa88f00ec8$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$0b3c3ffa88f00ec8$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$f72e780566692a5a$exports","$93ab40856e8270c2$exports","workerUrl","origin","isESM","self","location","source","stringify","createObjectURL","Blob","type","$f72e780566692a5a$var$url","document","addEventListener","ready","chatLog","getElementById","input","sendBtn","templateBtns","querySelectorAll","alchemyKeyInput","initBtn","statusSpan","messageId","statusIcons","pending","error","worker","Worker","sendMessage","userMessage","object","trim","addMessagePair","messagePairDiv","createElement","classList","add","requestMessage","createMessageDiv","formatJSON","responseMessage","appendChild","prepend","message","postMessage","value","messageContent","messageDiv","content","innerHTML","messageIdDiv","textContent","jsonString","json","obj","replace","match","cls","test","e","onmessage","event","data","innerText","console","responseContent","response","hasOwnProperty","parentElement","setAttribute","onerror","key","shiftKey","preventDefault","forEach","btn","dataset","template","formattedJSON","alchemyKey","log","config","network","ethereum_url","starknet_url"],"version":3,"file":"index.5507e428.js.map"}